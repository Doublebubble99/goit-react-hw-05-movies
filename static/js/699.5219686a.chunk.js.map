{"version":3,"file":"static/js/699.5219686a.chunk.js","mappings":"6OAAA,aAAe,OAAf,oBAAe,WAA0BA,GAA1B,6EACG,mCADH,kBAGYC,MAAM,sCAAD,OACYD,EADZ,4BAFd,mCAEc,oBAE1BE,MAAK,SAAAC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAEZ,OAAOF,EAASG,MACjB,IAVU,cAGLH,EAHK,yBAWJA,GAXI,gCAaXI,QAAQC,IAAI,KAAMC,SAbP,gF,aCIA,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQb,GAAYc,EAAAA,EAAAA,MAAZd,QAMR,OALAe,EAAAA,EAAAA,YAAU,YDPG,SAAf,mCCQIC,CAAWhB,GAASE,MAAK,SAAAC,GACvBU,EAAUV,EAASc,KACpB,GACF,GAAE,CAACjB,KAEF,0BACE,wBACGY,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACV,2BACE,gBAAKC,IAAKF,EAAMG,aAAcC,IAAKJ,EAAMK,QACzC,wBAAKL,EAAMK,QACX,wBAAKL,EAAMM,cAHJL,EADC,OAUnB,C,sBCzBD,SAASM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOjC,KAAK4B,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["services/getCredits.jsx","components/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export default async function getCredits(movieId) {\n  const API_KEY = 'c4db8ccc58a0592251aa55d706d65408';\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n      return response.json();\n    });\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getCredits from 'services/getCredits';\n\nexport default function Cast() {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getCredits(movieId).then(response => {\n      setActors(response.cast);\n    });\n  }, [movieId]);\n  return (\n    <div>\n      <ul>\n        {actors.map((actor, index) => (\n          <li key={index}>\n            <img src={actor.profile_path} alt={actor.name} />\n            <h2>{actor.name}</h2>\n            <h3>{actor.character}</h3>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","fetch","then","response","ok","Error","json","console","log","message","Cast","useState","actors","setActors","useParams","useEffect","getCredits","cast","map","actor","index","src","profile_path","alt","name","character","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}