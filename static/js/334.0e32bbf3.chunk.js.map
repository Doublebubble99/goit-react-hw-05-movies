{"version":3,"file":"static/js/334.0e32bbf3.chunk.js","mappings":"qPAAA,aAAe,OAAf,oBAAe,WAA6BA,GAA7B,6EACG,mCADH,kBAGYC,MAAM,qDAAD,OAFd,mCAEc,kBAC4CD,EAD5C,+CAE1BE,MAAK,SAAAC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAEZ,OAAOF,EAASG,MACjB,IAVU,cAGLH,EAHK,yBAWJA,GAXI,gCAaXI,QAAQC,IAAI,KAAMC,SAbP,gF,aCIA,SAASC,IAAU,IAAD,EACzBC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,EAAK,UAAGP,EAAaQ,IAAI,gBAApB,QAAgC,GAe3C,OALAC,EAAAA,EAAAA,YAAU,YDnBG,SAAf,mCCoBIC,CAAcH,GAAOnB,MAAK,SAAAuB,GACxBL,EAAUK,EAAMC,QACjB,GACF,GAAE,CAACL,KAEF,4BACE,kBAAMM,SAbW,SAAAC,GACnBA,EAAIC,iBACJd,EAAgB,CAAEM,MAAOJ,IAEzBW,EAAIE,OAAOC,OACZ,EAQG,WACE,kBAAOC,KAAK,OAAOf,MAAOA,EAAOgB,SAjBlB,SAAAL,GACnBV,EAASU,EAAIE,OAAOb,MACrB,KAgBK,mBAAQe,KAAK,SAAb,SAAsB,eAExB,wBACGb,EAAOe,KAAI,SAAAT,GAAK,OACf,yBACE,SAAC,KAAD,CAASU,GAAE,UAAKV,EAAMW,IAAMC,MAAO,CAAEC,KAAM3B,GAA3C,SACGc,EAAMc,SAFFd,EAAMW,GADA,QAUxB,C,sBCzCD,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB9B,EAAQ+B,EAAK/B,KAInB,CAHE,MAAOgC,GAEP,YADAN,EAAOM,EAET,CACID,EAAKE,KACPR,EAAQzB,GAERkC,QAAQT,QAAQzB,GAAOf,KAAK0C,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAM3B,GACbuB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ5B,EAClE,CACA,SAAS4B,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C","sources":["services/getSearchFilm.jsx","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export default async function getSearchFilm(keyword) {\n  const API_KEY = 'c4db8ccc58a0592251aa55d706d65408';\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${keyword}&include_adult=false&language=en-US&page=1`\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n      return response.json();\n    });\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import { useEffect, useState } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport getSearchFilm from 'services/getSearchFilm';\n\nexport default function Movies() {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [value, setValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const query = searchParams.get('query') ?? '';\n  const handleChange = evt => {\n    setValue(evt.target.value);\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setSearchParams({ query: value });\n\n    evt.target.reset();\n  };\n  useEffect(() => {\n    getSearchFilm(query).then(movie => {\n      setMovies(movie.results);\n    });\n  }, [query]);\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={value} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <NavLink to={`${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["keyword","fetch","then","response","ok","Error","json","console","log","message","Movies","location","useLocation","useSearchParams","searchParams","setSearchParams","useState","value","setValue","movies","setMovies","query","get","useEffect","getSearchFilm","movie","results","onSubmit","evt","preventDefault","target","reset","type","onChange","map","to","id","state","from","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}